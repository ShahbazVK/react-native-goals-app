{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { UserContextProvider } from \"../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GoalInput(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredGoalText = _useState2[0],\n    setEnteredGoalText = _useState2[1];\n  var _useContext = useContext(UserContextProvider),\n    user = _useContext.user,\n    setuser = _useContext.setuser;\n  setuser(\"Ayesha\");\n  console.log(user);\n  function goalInputHandler(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandler() {\n    props.onAddGoal(enteredGoalText);\n    setEnteredGoalText(\"\");\n  }\n  return _jsx(Modal, {\n    visible: props.visible,\n    animationType: \"slide\",\n    children: _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Image, {\n        style: styles.image,\n        source: require(\"../assets/images/goal.png\")\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Your course goal!\",\n        onChangeText: goalInputHandler,\n        value: enteredGoalText\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            title: \"Cancel\",\n            onPress: props.onCancel,\n            color: \"#f31282\"\n          })\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            title: \"Add Goal\",\n            onPress: addGoalHandler,\n            color: \"#b180f0\"\n          })\n        })]\n      })]\n    })\n  });\n}\nexport default GoalInput;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n    backgroundColor: \"#311b6b\"\n  },\n  image: {\n    width: 100,\n    height: 100,\n    margin: 20\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#e4d0ff\",\n    backgroundColor: \"#e4d0ff\",\n    color: \"#120438\",\n    borderRadius: 6,\n    width: \"100%\",\n    padding: 16\n  },\n  buttonContainer: {\n    marginTop: 16,\n    flexDirection: \"row\"\n  },\n  button: {\n    width: 100,\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"names":["useContext","useState","View","TextInput","Button","StyleSheet","Modal","Image","UserContextProvider","jsx","_jsx","jsxs","_jsxs","GoalInput","props","_useState","_useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","_useContext","user","setuser","console","log","goalInputHandler","enteredText","addGoalHandler","onAddGoal","visible","animationType","children","style","styles","inputContainer","image","source","require","textInput","placeholder","onChangeText","value","buttonContainer","button","title","onPress","onCancel","color","create","flex","justifyContent","alignItems","padding","backgroundColor","width","height","margin","borderWidth","borderColor","borderRadius","marginTop","flexDirection","marginHorizontal"],"sources":["C:/Users/shahb/Downloads/Compressed/react-native-practical-guide-code-02-basics/components/GoalInput.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  StyleSheet,\n  Modal,\n  Image,\n} from \"react-native\";\nimport { UserContextProvider } from \"../context/UserContext\";\n\nfunction GoalInput(props) {\n  const [enteredGoalText, setEnteredGoalText] = useState(\"\");\n\n  const { user, setuser } = useContext(UserContextProvider);\n  setuser(\"Ayesha\");\n  console.log(user);\n\n  function goalInputHandler(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n\n  function addGoalHandler() {\n    props.onAddGoal(enteredGoalText);\n    setEnteredGoalText(\"\");\n  }\n\n  return (\n    <Modal visible={props.visible} animationType=\"slide\">\n      <View style={styles.inputContainer}>\n        <Image\n          style={styles.image}\n          source={require(\"../assets/images/goal.png\")}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Your course goal!\"\n          onChangeText={goalInputHandler}\n          value={enteredGoalText}\n        />\n        <View style={styles.buttonContainer}>\n          <View style={styles.button}>\n            <Button title=\"Cancel\" onPress={props.onCancel} color=\"#f31282\" />\n          </View>\n          <View style={styles.button}>\n            <Button title=\"Add Goal\" onPress={addGoalHandler} color=\"#b180f0\" />\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nexport default GoalInput;\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n    backgroundColor: \"#311b6b\",\n  },\n  image: {\n    width: 100,\n    height: 100,\n    margin: 20,\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#e4d0ff\",\n    backgroundColor: \"#e4d0ff\",\n    color: \"#120438\",\n    borderRadius: 6,\n    width: \"100%\",\n    padding: 16,\n  },\n  buttonContainer: {\n    marginTop: 16,\n    flexDirection: \"row\",\n  },\n  button: {\n    width: 100,\n    marginHorizontal: 8,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}